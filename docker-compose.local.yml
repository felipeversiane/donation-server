name: donation-server

services:
  db:
    image: postgres:16-alpine
    container_name: donation-server-db
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_DB: postgres
      POSTGRES_SSL: disable
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -q -d postgres -U postgres || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s

  migrator:
    image: migrate/migrate
    container_name: donation-server-migrator
    volumes:
      - ./migrations:/migrations
    command:
      - -path
      - /migrations
      - -database
      - postgres://postgres:postgres123@db:5432/postgres?sslmode=disable
      - up
    depends_on:
      db:
        condition: service_healthy
    networks:
      - default

  server:
    build:
      context: .
      dockerfile: docker/Dockerfile.dev
    container_name: donation-server
    volumes:
      - .:/app
      - ./logs:/logs
    restart: unless-stopped
    depends_on:
      migrator:
        condition: service_completed_successfully
    networks:
      - default
    ports:
      - "8000:8000"
    environment:
      DB_HOST: db
      DB_PORT: "5432"
      DB_USER: postgres
      DB_PASSWORD: postgres123
      DB_NAME: postgres
      DB_SSL: disable
      DB_MAX_CONNECTIONS: "20"
      DB_IDLE_CONNECTIONS: "10"
      DB_CONN_MAX_LIFETIME: "300"
      HTTP_SERVER_PORT: "8000"
      HTTP_SERVER_READ_TIMEOUT: "15"
      HTTP_SERVER_WRITE_TIMEOUT: "15"
      HTTP_SERVER_IDLE_TIMEOUT: "60"
      HTTP_SERVER_RATE_LIMIT: "100-S"
      HTTP_SERVER_ENVIRONMENT: development
      HTTP_SERVER_SWAGGER_USER: admin
      HTTP_SERVER_SWAGGER_PASSWORD: admin123
      JWT_SECRET_KEY: "78931kas%&*#1i390dajs"
      JWT_REFRESH_SECRET_KEY: "98312jk#@SDAwseDA@sdj2s"
      LOG_LEVEL: debug
      LOG_PATH: logs/app.log
      LOG_STDOUT: "true"
      FILE_STORAGE_ACCESS_KEY: adminsecret
      FILE_STORAGE_SECRET_KEY: adminsecret123
      FILE_STORAGE_ENDPOINT: http://localhost:9000
      FILE_STORAGE_REGION: us-east-1
      FILE_STORAGE_BUCKET: donation-storage
      FILE_STORAGE_ACL: public-read
      FILE_STORAGE_URL: http://localhost:9000/donation-storage

  db_ui:
    image: sosedoff/pgweb:0.13.1
    container_name: donation-server-pgadmin
    environment:
      PGWEB_DATABASE_URL: postgresql://postgres:postgres123@db:5432/postgres?sslmode=disable
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "5000:8081"
    networks:
      - default
    restart: unless-stopped

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: adminsecret
      MINIO_ROOT_PASSWORD: adminsecret123
    volumes:
      - ./data:/data
    command: server /data --console-address ":9001"

volumes:
  local_postgres_data: {}

networks:
  default:
    driver: bridge
