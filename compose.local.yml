name: donation-server

services:
  server:
    build: 
      context: .
      dockerfile: docker/Dockerfile.dev
    container_name: donation-server
    ports:  
      - "8000:8000"
    restart: unless-stopped
    depends_on:
      migrator:
        condition: service_completed_successfully
    volumes:
      - .:/app
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
      - DB_NAME=postgres
      - DB_SSL=disable
      - DB_MAX_CONNECTIONS=20
      - DB_IDLE_CONNECTIONS=10
      - DB_CONN_MAX_LIFETIME=300


  db:
    image: postgres:13.18-alpine
    command: postgres -c "max_connections=600"
    container_name: donation-server-db
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres123
      - POSTGRES_DB=postgres
      - POSTGRES_SSL=disable
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -q -d postgres -U postgres || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3  
      start_period: 20s

  migrator:
    image: migrate/migrate
    container_name: donation-server-migrator  
    volumes:
      - ./migrations:/migrations
    command: [
      "-path", "/migrations",
      "-database", 
      "postgresql://postgres:postgres123@db:5432/postgres?sslmode=disable",
      "up"
    ]
    depends_on:
      db:
        condition: service_healthy
    networks:
      - default

  db_ui:
    image: sosedoff/pgweb:0.13.1
    container_name: donation-server-pgadmin
    environment:
      - PGWEB_DATABASE_URL=postgresql://postgres:postgres123@db:5432/postgres?sslmode=disable
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "5000:5000"
    networks:
      - default
    restart: unless-stopped

volumes:
  local_postgres_data: {}

networks:
  default:
    driver: bridge